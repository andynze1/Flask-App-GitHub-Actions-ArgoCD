name: Test and Build

on:
  push:
    branches:
      - master
    # paths:
    #   - '**/*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    #Setting up environment
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
          
      # Test the Code
      - name: Run Linting tests
        run: |
          flake8 --ignore=E501,F401 .

      - name: Docker Credentials
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

      # Build the Docker Image
      - name: Build Docker Image
        run: |
          docker build . -t andynze4/flask-app:${{ env.COMMIT_ID }} 
      
      - name: Test Docker Login
        run: |
          docker info
          
      # Push the Docker Image
      - name: Push Docker Image
        run: |
          docker push andynze4/flask-app:${{ env.COMMIT_ID }}
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v3 # Cloneing the Repo

      # UPdate the K8s Manifest Files
      - name: Update K8s Manifests
        shell: bash
        run: |
          echo ${{needs.build.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/flask-app/values.yaml

      # # Update Github
      # - name: Commit the changes
      #   run: |
      #     git config --global user.email "andynze4@gmail.com"
      #     git config --global user.name "GitHub Actions Bot"
      #     git add deploy/deploy.yaml
      #     git commit -m "Update deploy.yaml with new image COMMIT_ID - ${{ env.COMMIT_ID }}"
      #     git remote set-url origin https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/andynze4/Flask-App-GitHub-Actions-ArgoCD.git
      #     git push origin master
      
      # Update Github
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updating values.yaml with new commit ${{needs.build.outputs.commit_id}}'
          
      - name: Install ArgoCD CLI
        shell: bash
        run: |
          curl -ksSL -o /tmp/argocd https://argocd-server.argocd/download/argocd-linux-arm64
          chmod +x /tmp/argocd
          sudo mv /tmp/argocd /usr/local/bin/argocd
          echo "✅ ArgoCD CLI installed successfully."

  #  # Download and install ArgoCD CLI from Installation
  #     - name: Install ArgoCD CLI
  #       shell: bash
  #       run: |
  #         curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-arm64
  #         file argocd  # ✅ debug output to confirm what was downloaded
  #         chmod +x argocd
  #         sudo mv argocd /usr/local/bin/argocd

      - name: Argocd app sync
        shell: bash
        run: |
          argocd login argocd-server.argocd \
          --username ${{ secrets.ARGOCD_USER }} \
          --password ${{ secrets.ARGOCD_PASSWORD }} \
          --insecure \
          --grpc-web

          argocd app sync flask-app
     


        
      

