### âœ… GitHub Actions Workflow (fully fixed with all corrections)

name: Test and Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Run Linting tests
        run: |
          flake8 --ignore=E501,F401 .

      - name: Docker Credentials
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Shorten commit id
        shell: bash
        run: echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

      - name: Build Docker Image
        run: docker build . -t andynze4/flask-app:${{ env.COMMIT_ID }}

      - name: Test Docker Login
        run: docker info

      - name: Push Docker Image
        run: docker push andynze4/flask-app:${{ env.COMMIT_ID }}

    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update Helm values.yaml
        shell: bash
        run: |
          echo ${{ needs.build.outputs.commit_id }}
          pip install yq
          yq -Yi '.image.tag = "${{ needs.build.outputs.commit_id }}"' charts/flask-app/values.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updating values.yaml with new commit ${{ needs.build.outputs.commit_id }}'
          pull: --rebase

      - name: Install ArgoCD CLI
        shell: bash
        run: |
          curl -ksSL -o /tmp/argocd https://argocd-server.argocd/download/argocd-linux-arm64
          chmod +x /tmp/argocd
          sudo mv /tmp/argocd /usr/local/bin/argocd

      - name: ArgoCD app sync
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --username ${{ secrets.ARGOCD_USER }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure \
            --grpc-web

          argocd app sync flask-app